{"version":3,"file":"static/js/503.d274e8cd.chunk.js","mappings":"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","sources":["component/FilmLayout/FilmLayout.styled.js","component/Loader/Loader.styled.js","component/Loader/Loader.jsx","component/MoveDetails/MoveDetails.jsx","component/MoveDetails/MoveDetails.styled.js","fetch/getDataFilm.js"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nexport const Container = styled.div`\r\n    max-width: 480px;\r\n    padding: 0 20px;\r\n    margin: 0 auto;\r\n    overflow: hidden;\r\n\r\n    @media screen and (min-width: 480px) {\r\n        padding: 0 32px;\r\n        max-width: 768px;\r\n    }\r\n\r\n    @media screen and (min-width: 769px) {\r\n        max-width: 1280px;\r\n    }\r\n`\r\nexport const Header = styled.header`\r\nbox-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n`\r\nexport const LinkList = styled.ul`\r\ndisplay: flex;\r\ngap: 20px;\r\nlist-style: none;\r\n`\r\nexport const LinkItem = styled.li`\r\n\r\n`\r\nexport const LinkPage = styled(NavLink)`\r\npadding: 4px 8px;\r\nborder-radius: 0.4rem;\r\ntext-transform: uppercase;\r\nfont-size: 20px;\r\ntext-decoration: none;\r\ncolor: black;\r\ntransition: color 300ms cubic-bezier(0.075, 0.82, 0.165, 1), background-color 300ms cubic-bezier(0.075, 0.82, 0.165, 1);\r\n&:hover, :focus{\r\n    color: orange;\r\n}\r\n&.active {\r\n    color: white;\r\n    background-color: orangered;\r\n    transition: color 300ms cubic-bezier(0.075, 0.82, 0.165, 1), background-color 300ms cubic-bezier(0.075, 0.82, 0.165, 1);\r\n  }\r\n`","import styled from \"styled-components\";\r\n\r\nexport const LoderContainer = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\n`","import { ColorRing } from 'react-loader-spinner'\r\nimport { createPortal } from \"react-dom\";\r\nimport { useFilm } from '../hooks/useContext';\r\nimport { LoderContainer } from './Loader.styled';\r\n\r\n\r\nconst Loader = ({ isLoad = false }) => {\r\n    const { isLoading } = useFilm()\r\n    const loader = createPortal(<LoderContainer>\r\n        < ColorRing\r\n            visible={isLoad || isLoading}\r\n            height=\"80\"\r\n            width=\"80\"\r\n            ariaLabel=\"blocks-loading\"\r\n            wrapperClass=\"blocks-wrapper\"\r\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\r\n        /></LoderContainer>, document.getElementById('root-loading'))\r\n    return loader;\r\n}\r\n\r\nexport default Loader;","import { Suspense, useEffect, useRef, useState } from \"react\";\r\nimport { useParams, Outlet, useLocation } from \"react-router-dom\";\r\nimport getDataFilm from \"../../fetch/getDataFilm\";\r\nimport { FaLongArrowAltLeft } from 'react-icons/fa';\r\nimport { Section, LinkButton, FilmCard, FilmPoster, Link } from \"./MoveDetails.styled\";\r\nimport { Container } from \"../FilmLayout/FilmLayout.styled\";\r\nimport { useFilm } from '../hooks/useContext';\r\nimport Loader from \"../Loader/Loader\";\r\n\r\nconst MoveDetails = () => {\r\n    const [image, setImage] = useState('')\r\n    const [title, setTitle] = useState('')\r\n    const [score, setScore] = useState('')\r\n    const [overview, setOverview] = useState('')\r\n    const [genres, setGenres] = useState([])\r\n    const [response, setResponse] = useState('')\r\n    const { setIsloading } = useFilm()\r\n    const { filmId } = useParams()\r\n    const location = useLocation();\r\n    const prevLocation = useRef(location.state?.from ?? '/move')\r\n\r\n    useEffect(() => {\r\n        setIsloading(true)\r\n        getDataFilm(`movie/${filmId}`)\r\n            .then(({ original_title, genres, vote_average, poster_path, overview }) => {\r\n                setTitle(`${original_title}`)\r\n                setGenres(genres.map(g => g.name).join(', '))\r\n                setOverview(`${overview}`)\r\n                setImage(`https://image.tmdb.org/t/p/w500${poster_path}`)\r\n                setScore(`${(10 * vote_average).toFixed(0)}%`)\r\n            }).catch(err => setResponse(err.toString())).finally(() => setIsloading(false))\r\n    }, [filmId])\r\n\r\n    const moveDetails =\r\n        <>\r\n            {!response &&\r\n                <Section>\r\n                    <Container>\r\n                        <LinkButton to={prevLocation.current}><FaLongArrowAltLeft /> go back</LinkButton>\r\n                        <FilmCard>\r\n                            <FilmPoster src={image} alt={title} />\r\n                            <div>\r\n                                <h2>{title}</h2>\r\n                                <p>User Score: {score}</p>\r\n                                <h3>Overview</h3>\r\n                                <p>{overview}</p>\r\n                                <h3>Genres</h3>\r\n                                <p>{genres}</p>\r\n                            </div>\r\n                        </FilmCard>\r\n                    </Container>\r\n                </Section>}\r\n            {!response &&\r\n                <Section>\r\n                    <Container>\r\n                        <p>Additional information</p>\r\n                        <ul>\r\n                            <li><Link to='cast'>Cast</Link></li>\r\n                            <li><Link to='reviews'>Reviews</Link></li>\r\n                        </ul>\r\n                    </Container>\r\n                </Section>\r\n            }\r\n            <Suspense fallback={<Loader isLoad={true} />}>\r\n                <Outlet />\r\n            </Suspense>\r\n            {response && <div> {response}</div>}\r\n        </>\r\n    return moveDetails\r\n};\r\n\r\nexport default MoveDetails;\r\n\r\n","import { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Link = styled(NavLink)`\r\nfont-size: 12px;\r\ntext-transform: uppercase;\r\ncolor: black;\r\ntransition: color 300ms cubic-bezier(0.075, 0.82, 0.165, 1);\r\n&:hover, :focus{\r\n    color: orange;\r\n}\r\n`\r\nexport const Section = styled.section`\r\nbox-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n`\r\nexport const LinkButton = styled(NavLink)`\r\nbackground-color: #fff;\r\ntext-decoration: none   ;\r\ndisplay: flex;\r\nalign-items: center;\r\nwidth: 200px;\r\npadding: 4px 8px;\r\nborder: 1px solid black;\r\nborder-radius: 0.2rem;\r\ngap: 3px;\r\nmargin: 10px 0;\r\n&:hover,\r\n&:focus{\r\n    border-color:transparent;\r\n    background-color: orangered;\r\n    color: white;\r\n}\r\n`\r\nexport const FilmCard = styled.div`\r\ndisplay: flex;\r\ngap: 20px;\r\n`\r\n\r\nexport const FilmPoster = styled.img`\r\nflex-basis: 50%;\r\nwidth: 100%;\r\noverflow: hidden;\r\nheight: 100%;\r\nobject-fit: cover;\r\n`","const URL = \"https://api.themoviedb.org/3/\";\r\n\r\nconst options = {\r\n    method: 'GET',\r\n    headers: {\r\n        accept: 'application/json',\r\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5MzZiODFhZDI1YjU4ZDM4MDVhMzIwMDMwNmFiOTI3OCIsInN1YiI6IjY0MzZlYjk0YWVkZTU5MDBiNmMxYTAzMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.zIeaRszK30mloEyQVSdO5S4hPFf9bbWLE0idwZt7Z2g'\r\n    }\r\n};\r\n\r\nconst getDataFilm = async (param) => {\r\n    return fetch(`${URL}${param}${param.includes('?') ? '&language=en-US' : '?language=en-US'}`, options)\r\n        .then(res => {\r\n            if (!res.ok) {\r\n                throw new Error(res.status);\r\n            }\r\n            return res.json()\r\n        })\r\n};\r\n\r\nexport default getDataFilm;\r\n\r\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Header","_templateObject2","LinkList","_templateObject3","LinkItem","_templateObject4","LinkPage","NavLink","_templateObject5","LoderContainer","_ref","_ref$isLoad","isLoad","isLoading","useFilm","createPortal","_jsx","children","ColorRing","visible","height","width","ariaLabel","wrapperClass","colors","document","getElementById","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","image","setImage","_useState3","_useState4","title","setTitle","_useState5","_useState6","score","setScore","_useState7","_useState8","overview","setOverview","_useState9","_useState10","genres","setGenres","_useState11","_useState12","response","setResponse","setIsloading","filmId","useParams","location","useLocation","prevLocation","useRef","state","from","useEffect","getDataFilm","concat","then","original_title","vote_average","poster_path","map","g","name","join","toFixed","catch","err","toString","finally","_jsxs","_Fragment","Section","LinkButton","to","current","FaLongArrowAltLeft","FilmCard","FilmPoster","src","alt","Link","Suspense","fallback","Loader","Outlet","options","method","headers","accept","Authorization","_asyncToGenerator","_regeneratorRuntime","mark","_callee","param","wrap","_context","prev","next","abrupt","fetch","includes","res","ok","Error","status","json","stop","_x","apply","arguments"],"sourceRoot":""}